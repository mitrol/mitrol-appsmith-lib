!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).mitrol=e()}(this,(function(){"use strict";return{apiUrl:"",formUrl:"",post:async(t,e)=>{var r=new Headers;r.append("Authorization","Bearer "+e);var o={method:"POST",headers:r,redirect:"follow"};let a=mitrol.apiUrl+t;const l=await fetch(a,o);return console.log("post - urlWS: ",a),console.log("post - response: ",l),await l.json()},get:async(t,e)=>{var r=new Headers;r.append("Authorization","Bearer "+e);var o={method:"GET",headers:r,redirect:"follow"};let a=mitrol.apiUrl+t;const l=await fetch(mitrol.apiUrl+t,o);return console.log("get - urlWS: ",a),await l.json()},call:async(t,e)=>{try{const r=`/api/${mitrol.getUrlParams("loginId")}/call?idCampania=${e}&destino=${t}`;console.log(`call - calling endpoint ${r}`);let o=mitrol.getUrlParams("jwt"),a=await mitrol.post(r,o);return console.log(`call - res.idInteraccion: ${a.idInteraccion}`),a.idInteraccion}catch(t){return console.error(`Error on call: ${t}`),!1}},callOnInteraction:async t=>{try{const e=`/api/${mitrol.getUrlParams("loginId")}/call?idCampania=${mitrol.getUrlParams("idcampania")}&destino=${t}&interactionId=${mitrol.getUrlParams("idLlamada")}`;console.log(`call - calling endpoint ${e}`);let r=mitrol.getUrlParams("jwt"),o=await mitrol.post(e,r);return console.log(`call - res.idInteraccion: ${o.idInteraccion}`),o.idInteraccion}catch(t){return console.error(`Error on call: ${t}`),!1}},getOutboundCampaigns:async t=>{let e=mitrol.getUrlParams("jwt"),r=`/api/${t}/campaigns`,o=await mitrol.get(r,e);o=await o.value;let a=[];for(let t=0;t<o.length;t++)"Saliente"==o[t].nombreModoCampania&&a.push(o[t]);return a},getUrlParams:t=>{var e="",r="",o=!1;for(let a=0;void 0!==mitrol.formUrl[a];a++)if(o){if("&"===mitrol.formUrl[a]||void 0===mitrol.formUrl[a])break;e+=mitrol.formUrl[a]}else mitrol.formUrl[a]===t[r.length]?(r+=mitrol.formUrl[a])===t&&(a++,o=!0):r="";return console.log(`getUrlParams - paramName: ${t} | paramValue: ${e}`),e},hangup:async t=>{try{let e=String(await mitrol.getUrlParams("loginId")),r=String(await mitrol.getUrlParams("jwt")),o=`/api/${e}/hangup?idInteraccion=${t}`;return 200===(await mitrol.post(o,r)).status?(console.log("hangup - success"),!0):(console.log("hangup - failed"),!1)}catch(t){return console.error(`Error on hangup: ${t}`),!1}},setResultadoGestion:async(t,e,r)=>{try{let o=String(await mitrol.getUrlParams("loginId")),a=String(await mitrol.getUrlParams("jwt")),l=`/api/${o}/interactionresult?idInteraccion=${t}&crmId=${e}&idResultadoGestionInterno=${r}&idResultadoGestionExterno=${r}`;return 200===(await mitrol.get(l,a)).status?(console.log("setResultadoGestion - success"),!0):(console.log("setResultadoGestion - failed"),!1)}catch(t){return console.error(`Error on setResultadoGestion: ${t}`),null}},getResultadoGestion:async t=>{try{let e=[],r=[];for(let o=0;o<t.length;o++)e.some((e=>e.name===t[o].parent_name&&e.code===t[o].parent_name))||e.push({name:t[o].parent_name,code:t[o].parent_name}),r.some((e=>e.name===t[o].child_name&&e.code===t[o].idResultadoGestionChild))||r.push({name:t[o].child_name,code:t[o].idResultadoGestionChild});return console.log(`getResultadoGestion - Las categorias son: ${JSON.stringify(e)}. Las subcategorias son: ${JSON.stringify(r)}.`),[e,r]}catch(t){return console.error(`Error on getResultadoGestion: ${t}`),[null,null]}},setResultadoUI:async(t,e)=>{try{let r=[];for(let o=0;o<t.length;o++)e===t[o].parent_name&&r.push({name:t[o].child_name,code:t[o].idResultadoGestionChild});return console.log(`setUIResultadoGestion - ${r}`),r}catch(t){return console.error(`Error on setUIResultadoChild: ${t}`),null}},hold:async t=>{try{let e=String(await mitrol.getUrlParams("loginId")),r=String(await mitrol.getUrlParams("jwt")),o=`/api/${e}/hold?idInteraccion=${t}`;return 200===(await mitrol.post(o,r)).status?(console.log("hold - success"),!0):(console.log("hold - failed"),!1)}catch(t){return console.error(`Error on hold: ${t}`),null}},resume:async t=>{try{let e=String(await mitrol.getUrlParams("loginId")),r=String(await mitrol.getUrlParams("jwt")),o=`/api/${e}/resume?idInteraccion=${t}`;return 200===(await mitrol.post(o,r)).status?(console.log("resume - success"),!0):(console.log("resume - failed"),!1)}catch(t){return console.error(`Error on hold: ${t}`),null}}}}));
