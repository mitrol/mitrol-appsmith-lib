!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e="undefined"!=typeof globalThis?globalThis:e||self).mitrol=r()}(this,(function(){"use strict";return{apiUrl:"",formUrl:"",post:async(e,r)=>{var t=new Headers;t.append("Authorization","Bearer "+r);var o={method:"POST",headers:t,redirect:"follow"};let a=mitrol.apiUrl+e;const l=await fetch(a,o);return console.log("post - urlWS: ",a),console.log("post - response: ",l),await l.json()},get:async(e,r)=>{var t=new Headers;t.append("Authorization","Bearer "+r);var o={method:"GET",headers:t,redirect:"follow"};let a=mitrol.apiUrl+e;const l=await fetch(mitrol.apiUrl+e,o);return console.log("get - urlWS: ",a),await l.json()},call:async(e,r)=>{try{const t=`/api/${mitrol.getUrlParams("loginId")}/call?idCampania=${r}&destino=${e}`;console.log(`call - calling endpoint ${t}`);let o=mitrol.getUrlParams("jwt"),a=await mitrol.post(t,o);return console.log(`call - res.idInteraccion: ${a.idInteraccion}`),a.idInteraccion}catch(e){return console.error(`Error on call: ${e}`),!1}},callOnInteraction:async e=>{try{const r=`/api/${mitrol.getUrlParams("loginId")}/call?idCampania=${mitrol.getUrlParams("idcampania")}&destino=${e}&interactionId=${mitrol.getUrlParams("idLlamada")}`;console.log(`call - calling endpoint ${r}`);let t=mitrol.getUrlParams("jwt"),o=await mitrol.post(r,t);return console.log(`call - res.idInteraccion: ${o.idInteraccion}`),o.idInteraccion}catch(e){return console.error(`Error on call: ${e}`),!1}},hold:async e=>{let r=mitrol.getUrlParams("jwt"),t=`/api/hold?idInteraccion=${e}`;try{return await mitrol.post(t,r),!0}catch(e){return console.error(`Error on hold: ${e}`),!1}},resume:async e=>{let r=mitrol.getUrlParams("jwt"),t=`/api/resume?idInteraccion=${e}`;try{return mitrol.post(t,r),!0}catch(e){return console.error(`Error on resume: ${e}`),!1}},getOutboundCampaigns:async e=>{let r=mitrol.getUrlParams("jwt"),t=`/api/${e}/campaigns`,o=await mitrol.get(t,r);o=await o.value;let a=[];for(let e=0;e<o.length;e++)"Saliente"==o[e].nombreModoCampania&&a.push(o[e]);return a},getUrlParams:e=>{var r="",t="",o=!1;for(let a=0;void 0!==mitrol.formUrl[a];a++)if(o){if("&"===mitrol.formUrl[a]||void 0===mitrol.formUrl[a])break;r+=mitrol.formUrl[a]}else mitrol.formUrl[a]===e[t.length]?(t+=mitrol.formUrl[a])===e&&(a++,o=!0):t="";return console.log(`getUrlParams - paramName: ${e} | paramValue: ${r}`),r},hangup:async e=>{try{let r=String(await mitrol.getUrlParams("loginId")),t=String(await mitrol.getUrlParams("jwt")),o=`/api/${r}/hangup?idInteraccion=${e}`;return 200===(await mitrol.post(o,t)).status?(console.log("hangup - success"),!0):(console.log("hangup - failed"),!1)}catch(e){return console.error(`Error on hangup: ${e}`),!1}},setResultadoGestion:async(e,r,t)=>{try{let o=String(await mitrol.getUrlParams("loginId")),a=String(await mitrol.getUrlParams("jwt")),l=`/api/${o}/interactionresult?idInteraccion=${e}&crmId=${r}&idResultadoGestionInterno=${t}&idResultadoGestionExterno=${t}`;return 200===(await mitrol.get(l,a)).status?(console.log("setResultadoGestion - success"),!0):(console.log("setResultadoGestion - failed"),!1)}catch(e){return console.error(`Error on setResultadoGestion: ${e}`),null}},getResultadoGestion:async e=>{try{let r=[],t=[];for(let o=0;o<e.length;o++)r.some((r=>r.name===e[o].parent_name&&r.code===e[o].parent_name))||r.push({name:e[o].parent_name,code:e[o].parent_name}),t.some((r=>r.name===e[o].child_name&&r.code===e[o].idResultadoGestionChild))||t.push({name:e[o].child_name,code:e[o].idResultadoGestionChild});return console.log(`getResultadoGestion - Las categorias son: ${JSON.stringify(r)}. Las subcategorias son: ${JSON.stringify(t)}.`),[r,t]}catch(e){return console.error(`Error on getResultadoGestion: ${e}`),[null,null]}},setResultadoUI:async(e,r)=>{try{let t=[];for(let o=0;o<e.length;o++)r===e[o].parent_name&&t.push({name:e[o].child_name,code:e[o].idResultadoGestionChild});return console.log(`setUIResultadoGestion - ${t}`),t}catch(e){return console.error(`Error on setUIResultadoChild: ${e}`),null}}}}));
