!function(o,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(o="undefined"!=typeof globalThis?globalThis:o||self).mitrol=e()}(this,(function(){"use strict";return{apiUrl:"",formUrl:"",estadoAgente:"",post:async(o,e)=>{var t=new Headers;t.append("Authorization","Bearer "+e);var r={method:"POST",headers:t,redirect:"follow"};let l=mitrol.apiUrl+o;const n=await fetch(l,r);return console.log("post - urlWS: ",l),console.log("post - response: ",n),await n.json()},get:async(o,e)=>{var t=new Headers;t.append("Authorization","Bearer "+e);var r={method:"GET",headers:t,redirect:"follow"};let l=mitrol.apiUrl+o;const n=await fetch(mitrol.apiUrl+o,r);return console.log("get - urlWS: ",l),await n.json()},getOutboundCampaigns:async o=>{let e=mitrol.getUrlParams("jwt"),t=`/api/${o}/campaigns`,r=await mitrol.get(t,e);r=await r.value;let l=[];for(let o=0;o<r.length;o++)"Saliente"==r[o].nombreModoCampania&&l.push(r[o]);return l},getUrlParams:o=>{var e="",t="",r=!1;for(let l=0;void 0!==mitrol.formUrl[l];l++)if(r){if("&"===mitrol.formUrl[l]||void 0===mitrol.formUrl[l])break;e+=mitrol.formUrl[l]}else mitrol.formUrl[l]===o[t.length]?(t+=mitrol.formUrl[l])===o&&(l++,r=!0):t="";return console.log(`getUrlParams - paramName: ${o} | paramValue: ${e}`),e},agentState:async()=>{try{const o=`/api/${String(await mitrol.getUrlParams("loginId"))}/agent-state`;console.log(`agentState - endpoint ${o}`);let e=String(await mitrol.getUrlParams("jwt")),t=await mitrol.get(o,e);return console.log(`agentState - El response es: ${JSON.stringify(t)}`),t.displayName}catch(o){return console.error(`Error on agentState: ${o}`),null}},call:async o=>{try{let e,t=mitrol.getUrlParams("loginId"),r=mitrol.getUrlParams("idCampania"),l=mitrol.getUrlParams("idLlamada"),n=mitrol.getUrlParams("jwt");"Preview"===mitrol.estadoAgente?(console.log("call"),e=`/api/${t}/call?idCampania=${r}&destino=${o}`,console.log(`call - calling endpoint ${e}`)):(console.log("callOnInteraction"),e=`/api/${t}/call?idCampania=${r}&destino=${o}&interactionId=${l}`,console.log(`callOnInteraccion - calling endpoint ${e}`)),mitrol.post(e,n).then((o=>(console.log(`call - El response es: ${JSON.stringify(o)}`),0==o.code?(console.log(`call - ${o.idInteraccion}`),[o.idInteraccion,o.code]):(console.log(`call sin ruta - ${o.idInteraccion}`),[null,o.code])))).catch((o=>(console.error("Error realizando la llamada:",o),[null,null])))}catch(o){return console.error(`Error on call/callOnInteraccion: ${o}`),[null,null]}},hangup:async o=>{try{const e=`/api/${String(await mitrol.getUrlParams("loginId"))}/hangup?idInteraccion=${o}`;console.log(`hangup - endpoint ${e}`);let t=String(await mitrol.getUrlParams("jwt")),r=await mitrol.post(e,t);return console.log(`hangup - El response es: ${JSON.stringify(r)}`),0==r.code?(console.log("hangup - success"),!0):(console.log("hangup - failed"),!1)}catch(o){return console.error(`Error on hangup: ${o}`),!1}},hold:async o=>{try{const e=`/api/${String(await mitrol.getUrlParams("loginId"))}/hold?idInteraccion=${o}`;console.log(`hold - endpoint ${e}`);let t=String(await mitrol.getUrlParams("jwt")),r=await mitrol.post(e,t);return console.log(`hold - El response es: ${JSON.stringify(r)}`),0==r.code?(console.log("hold - success"),!0):(console.log("hold - failed"),!1)}catch(o){return console.error(`Error on hold: ${o}`),null}},resume:async o=>{try{const e=`/api/${String(await mitrol.getUrlParams("loginId"))}/resume?idInteraccion=${o}`;console.log(`resume - endpoint ${e}`);let t=String(await mitrol.getUrlParams("jwt")),r=await mitrol.post(e,t);return console.log(`resume - El response es: ${JSON.stringify(r)}`),0==r.code?(console.log("resume - success"),!0):(console.log("resume - failed"),!1)}catch(o){return console.error(`Error on resume: ${o}`),null}},getResultadoGestion:async o=>{try{let e=[],t=[];for(let r=0;r<o.length;r++)e.some((e=>e.name===o[r].parent_name&&e.code===o[r].parent_name))||e.push({name:o[r].parent_name,code:o[r].parent_name}),t.some((e=>e.name===o[r].child_name&&e.code===o[r].idResultadoGestionChild))||t.push({name:o[r].child_name,code:o[r].idResultadoGestionChild});return console.log(`getResultadoGestion - Las categorias son: ${JSON.stringify(e)}. Las subcategorias son: ${JSON.stringify(t)}.`),[e,t]}catch(o){return console.error(`Error on getResultadoGestion: ${o}`),[null,null]}},setResultadoUI:async(o,e)=>{try{let t=[];for(let r=0;r<o.length;r++)e===o[r].parent_name&&t.push({name:o[r].child_name,code:o[r].idResultadoGestionChild});return console.log(`setUIResultadoGestion - ${JSON.stringify(t)}`),t}catch(o){return console.error(`Error on setUIResultadoChild: ${o}`),null}},setResultadoGestion:async(o,e,t)=>{try{const r=`/api/${String(await mitrol.getUrlParams("loginId"))}/interactionresult?idInteraccion=${o}&crmId=${e}&idResultadoGestionInterno=${t}&idResultadoGestionExterno=${t}`;let l=String(await mitrol.getUrlParams("jwt")),n=await mitrol.get(r,l);if(console.log(`setResultadoGestion - ${JSON.stringify(n)}`),0!=n.code)return console.log("setResultadoGestion - failed"),!1;console.log("setResultadoGestion - success"),await mitrol.closeinteraction(o)}catch(o){return console.error(`Error on setResultadoGestion: ${o}`),null}},closeinteraction:async o=>{try{const e=`/api/${String(await mitrol.getUrlParams("loginId"))}/closeinteraction?idInteraccion=${o}`;console.log(`closeinteraction - endpoint ${e}`);let t=String(await mitrol.getUrlParams("jwt")),r=await mitrol.get(e,t);return console.log(`closeinteraction - El response es: ${JSON.stringify(r)}`),0==r.code?(console.log("closeinteraction - interaccion cerrada"),!0):(console.log("closeinteraction - no se pudo cerrar la interaccion"),!1)}catch(o){return console.error(`Error on closeinteraction: ${o}`),null}}}}));
