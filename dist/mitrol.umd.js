!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).mitrol=t()}(this,(function(){"use strict";return{apiUrl:"",formUrl:"",post:async(e,t)=>{var o=new Headers;o.append("Authorization","Bearer "+t);var r={method:"POST",headers:o,redirect:"follow"};let a=mitrol.apiUrl+e;const l=await fetch(a,r);return console.log("post - urlWS: ",a),console.log("post - response: ",l),await l.json()},get:async(e,t)=>{var o=new Headers;o.append("Authorization","Bearer "+t);var r={method:"GET",headers:o,redirect:"follow"};let a=mitrol.apiUrl+e;const l=await fetch(mitrol.apiUrl+e,r);return console.log("get - urlWS: ",a),await l.json()},call:async(e,t)=>{try{const o=`/api/${mitrol.getUrlParams("loginId")}/call?idCampania=${t}&destino=${e}`;console.log(`call - calling endpoint ${o}`);let r=mitrol.getUrlParams("jwt"),a=await mitrol.post(o,r);return console.log(`call - res.idInteraccion: ${a.idInteraccion}`),a.idInteraccion}catch(e){return console.error(`Error on call: ${e}`),!1}},callOnInteraction:async e=>{try{const t=`/api/${mitrol.getUrlParams("loginId")}/call?idCampania=${mitrol.getUrlParams("idcampania")}&destino=${e}&interactionId=${mitrol.getUrlParams("idLlamada")}`;console.log(`call - calling endpoint ${t}`);let o=mitrol.getUrlParams("jwt"),r=await mitrol.post(t,o);return console.log(`call - res.idInteraccion: ${r.idInteraccion}`),r.idInteraccion}catch(e){return console.error(`Error on call: ${e}`),!1}},getOutboundCampaigns:async e=>{let t=mitrol.getUrlParams("jwt"),o=`/api/${e}/campaigns`,r=await mitrol.get(o,t);r=await r.value;let a=[];for(let e=0;e<r.length;e++)"Saliente"==r[e].nombreModoCampania&&a.push(r[e]);return a},getUrlParams:e=>{var t="",o="",r=!1;for(let a=0;void 0!==mitrol.formUrl[a];a++)if(r){if("&"===mitrol.formUrl[a]||void 0===mitrol.formUrl[a])break;t+=mitrol.formUrl[a]}else mitrol.formUrl[a]===e[o.length]?(o+=mitrol.formUrl[a])===e&&(a++,r=!0):o="";return console.log(`getUrlParams - paramName: ${e} | paramValue: ${t}`),t},hangup:async e=>{try{const t=`/api/${String(await mitrol.getUrlParams("loginId"))}/hangup?idInteraccion=${e}`;console.log(`hangup - endpoint ${t}`);let o=String(await mitrol.getUrlParams("jwt")),r=await mitrol.post(t,o);return console.log(`hangup - El response es: ${JSON.stringify(r)}`),"Success"==r.value?(console.log("hangup - success"),!0):(console.log("hangup - failed"),!1)}catch(e){return console.error(`Error on hangup: ${e}`),!1}},setResultadoGestion:async(e,t,o)=>{try{let r=String(await mitrol.getUrlParams("loginId")),a=String(await mitrol.getUrlParams("jwt")),l=`/api/${r}/interactionresult?idInteraccion=${e}&crmId=${t}&idResultadoGestionInterno=${o}&idResultadoGestionExterno=${o}`;return 200==(await mitrol.get(l,a)).status?(console.log("setResultadoGestion - success"),!0):(console.log("setResultadoGestion - failed"),!1)}catch(e){return console.error(`Error on setResultadoGestion: ${e}`),null}},getResultadoGestion:async e=>{try{let t=[],o=[];for(let r=0;r<e.length;r++)t.some((t=>t.name===e[r].parent_name&&t.code===e[r].parent_name))||t.push({name:e[r].parent_name,code:e[r].parent_name}),o.some((t=>t.name===e[r].child_name&&t.code===e[r].idResultadoGestionChild))||o.push({name:e[r].child_name,code:e[r].idResultadoGestionChild});return console.log(`getResultadoGestion - Las categorias son: ${JSON.stringify(t)}. Las subcategorias son: ${JSON.stringify(o)}.`),[t,o]}catch(e){return console.error(`Error on getResultadoGestion: ${e}`),[null,null]}},setResultadoUI:async(e,t)=>{try{let o=[];for(let r=0;r<e.length;r++)t===e[r].parent_name&&o.push({name:e[r].child_name,code:e[r].idResultadoGestionChild});return console.log(`setUIResultadoGestion - ${o}`),o}catch(e){return console.error(`Error on setUIResultadoChild: ${e}`),null}},hold:async e=>{try{const t=`/api/${String(await mitrol.getUrlParams("loginId"))}/hold?idInteraccion=${e}`;console.log(`hold - endpoint ${t}`);let o=String(await mitrol.getUrlParams("jwt")),r=await mitrol.post(t,o);return console.log(`hold - El response es: ${JSON.stringify(r)}`),"Success"==r.value?(console.log("hold - success"),!0):(console.log("hold - failed"),!1)}catch(e){return console.error(`Error on hold: ${e}`),null}},resume:async e=>{try{const t=`/api/${String(await mitrol.getUrlParams("loginId"))}/resume?idInteraccion=${e}`;console.log(`resume - endpoint ${t}`);let o=String(await mitrol.getUrlParams("jwt")),r=await mitrol.post(t,o);return console.log(`resume - El response es: ${JSON.stringify(r)}`),"Success"==r.value?(console.log("resume - success"),!0):(console.log("resume - failed"),!1)}catch(e){return console.error(`Error on resume: ${e}`),null}},agentState:async()=>{try{const e=`/api/${String(await mitrol.getUrlParams("loginId"))}/agent-state?`;console.log(`agentState - endpoint ${e}`);let t=String(await mitrol.getUrlParams("jwt")),o=await mitrol.get(e,t);return console.log(`agentState - El response es: ${JSON.stringify(o)}`),"Success"==o.value?(console.log("agentState - success"),!0):(console.log("agentState - failed"),!1)}catch(e){return console.error(`Error on agentState: ${e}`),null}}}}));
