!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o():"function"==typeof define&&define.amd?define(o):(e="undefined"!=typeof globalThis?globalThis:e||self).mitrol=o()}(this,(function(){"use strict";return{apiUrl:"",formUrl:"",post:async(e,o)=>{var t=new Headers;t.append("Authorization","Bearer "+o);var r={method:"POST",headers:t,redirect:"follow"};let a=mitrol.apiUrl+e;const n=await fetch(a,r);return console.log("post - urlWS: ",a),console.log("post - response: ",n),await n.json()},get:async(e,o)=>{var t=new Headers;t.append("Authorization","Bearer "+o);var r={method:"GET",headers:t,redirect:"follow"};let a=mitrol.apiUrl+e;const n=await fetch(mitrol.apiUrl+e,r);return console.log("get - urlWS: ",a),await n.json()},call:async(e,o)=>{try{const t=`/api/${mitrol.getUrlParams("loginId")}/call?idCampania=${o}&destino=${e}`;console.log(`call - calling endpoint ${t}`);let r=mitrol.getUrlParams("jwt"),a=await mitrol.post(t,r);return console.log(`call - res.idInteraccion: ${a.idInteraccion}`),a.idInteraccion}catch(e){return console.error(`Error on call: ${e}`),!1}},callOnInteraction:async e=>{try{const o=`/api/${mitrol.getUrlParams("loginId")}/call?idCampania=${mitrol.getUrlParams("idcampania")}&destino=${e}&interactionId=${mitrol.getUrlParams("idLlamada")}`;console.log(`call - calling endpoint ${o}`);let t=mitrol.getUrlParams("jwt"),r=await mitrol.post(o,t);return console.log(`call - res.idInteraccion: ${r.idInteraccion}`),r.idInteraccion}catch(e){return console.error(`Error on call: ${e}`),!1}},getOutboundCampaigns:async e=>{let o=mitrol.getUrlParams("jwt"),t=`/api/${e}/campaigns`,r=await mitrol.get(t,o);r=await r.value;let a=[];for(let e=0;e<r.length;e++)"Saliente"==r[e].nombreModoCampania&&a.push(r[e]);return a},getUrlParams:e=>{var o="",t="",r=!1;for(let a=0;void 0!==mitrol.formUrl[a];a++)if(r){if("&"===mitrol.formUrl[a]||void 0===mitrol.formUrl[a])break;o+=mitrol.formUrl[a]}else mitrol.formUrl[a]===e[t.length]?(t+=mitrol.formUrl[a])===e&&(a++,r=!0):t="";return console.log(`getUrlParams - paramName: ${e} | paramValue: ${o}`),o},hangup:async e=>{try{const o=`/api/${String(await mitrol.getUrlParams("loginId"))}/hangup?idInteraccion=${e}`;console.log(`hangup - endpoint ${o}`);let t=String(await mitrol.getUrlParams("jwt")),r=await mitrol.post(o,t);return console.log(`hangup - El response es: ${JSON.stringify(r)}`),"Success"==r.value?(console.log("hangup - success"),!0):(console.log("hangup - failed"),!1)}catch(e){return console.error(`Error on hangup: ${e}`),!1}},setResultadoGestion:async(e,o,t)=>{try{let r=String(await mitrol.getUrlParams("loginId")),a=String(await mitrol.getUrlParams("jwt")),n=`/api/${r}/interactionresult?idInteraccion=${e}&crmId=${o}&idResultadoGestionInterno=${t}&idResultadoGestionExterno=${t}`;return 200==(await mitrol.get(n,a)).status?(console.log("setResultadoGestion - success"),!0):(console.log("setResultadoGestion - failed"),!1)}catch(e){return console.error(`Error on setResultadoGestion: ${e}`),null}},getResultadoGestion:async e=>{try{let o=[],t=[];for(let r=0;r<e.length;r++)o.some((o=>o.name===e[r].parent_name&&o.code===e[r].parent_name))||o.push({name:e[r].parent_name,code:e[r].parent_name}),t.some((o=>o.name===e[r].child_name&&o.code===e[r].idResultadoGestionChild))||t.push({name:e[r].child_name,code:e[r].idResultadoGestionChild});return console.log(`getResultadoGestion - Las categorias son: ${JSON.stringify(o)}. Las subcategorias son: ${JSON.stringify(t)}.`),[o,t]}catch(e){return console.error(`Error on getResultadoGestion: ${e}`),[null,null]}},setResultadoUI:async(e,o)=>{try{let t=[];for(let r=0;r<e.length;r++)o===e[r].parent_name&&t.push({name:e[r].child_name,code:e[r].idResultadoGestionChild});return console.log(`setUIResultadoGestion - ${t}`),t}catch(e){return console.error(`Error on setUIResultadoChild: ${e}`),null}},hold:async e=>{try{const o=`/api/${String(await mitrol.getUrlParams("loginId"))}/hold?idInteraccion=${e}`;console.log(`hold - endpoint ${o}`);let t=String(await mitrol.getUrlParams("jwt")),r=await mitrol.post(o,t);return console.log(`hold - El response es: ${JSON.stringify(r)}`),"Success"==r.value?(console.log("hold - success"),!0):(console.log("hold - failed"),!1)}catch(e){return console.error(`Error on hold: ${e}`),null}},resume:async e=>{try{const o=`/api/${String(await mitrol.getUrlParams("loginId"))}/resume?idInteraccion=${e}`;console.log(`resume - endpoint ${o}`);let t=String(await mitrol.getUrlParams("jwt")),r=await mitrol.post(o,t);return console.log(`resume - El response es: ${JSON.stringify(r)}`),"Success"==r.value?(console.log("resume - success"),!0):(console.log("resume - failed"),!1)}catch(e){return console.error(`Error on resume: ${e}`),null}},agentState:async()=>{try{const e=`/api/${String(await mitrol.getUrlParams("loginId"))}/agent-state`;console.log(`agentState - endpoint ${e}`);let o=String(await mitrol.getUrlParams("jwt")),t=await mitrol.get(e,o);return console.log(`agentState - El response es: ${JSON.stringify(t)}`),"Preview"==t.displayName?(console.log("agentState - sin llamada en curso"),!0):(console.log("agentState - llamada en curso"),!1)}catch(e){return console.error(`Error on agentState: ${e}`),null}},closeinteraction:async e=>{try{const o=`/api/${String(await mitrol.getUrlParams("loginId"))}/closeinteraction?idInteraccion=${e}`;console.log(`closeinteraction - endpoint ${o}`);let t=String(await mitrol.getUrlParams("jwt")),r=await mitrol.get(o,t);return console.log(`agentStcloseinteractionate - El response es: ${JSON.stringify(r)}`),"Preview"==r.displayName?(console.log("closeinteraction - interaccion cerrada"),!0):(console.log("closeinteraction - no se pudo cerrar la interaccion"),!1)}catch(e){return console.error(`Error on closeinteraction: ${e}`),null}}}}));
